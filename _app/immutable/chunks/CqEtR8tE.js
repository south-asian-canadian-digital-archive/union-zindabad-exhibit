import{d as h,i as b}from"./Dwtmtxzo.js";function F(t){return(t==null?void 0:t.length)!==void 0?t:Array.from(t)}function x(t){const s=t-1;return s*s*s+1}function _(t,{delay:s=0,duration:c=400,easing:d=b}={}){const p=+getComputedStyle(t).opacity;return{delay:s,duration:c,easing:d,css:n=>`opacity: ${n*p}`}}function w(t,{delay:s=0,duration:c=400,easing:d=x,x:p=0,y:n=0,opacity:u=0}={}){const r=getComputedStyle(t),i=+r.opacity,e=r.transform==="none"?"":r.transform,a=i*(1-u),[l,y]=h(p),[m,g]=h(n);return{delay:s,duration:c,easing:d,css:($,f)=>`
			transform: ${e} translate(${(1-$)*l}${y}, ${(1-$)*m}${g});
			opacity: ${i-a*f}`}}function C(t,{delay:s=0,duration:c=400,easing:d=x,axis:p="y"}={}){const n=getComputedStyle(t),u=+n.opacity,r=p==="y"?"height":"width",i=parseFloat(n[r]),e=p==="y"?["top","bottom"]:["left","right"],a=e.map(o=>`${o[0].toUpperCase()}${o.slice(1)}`),l=parseFloat(n[`padding${a[0]}`]),y=parseFloat(n[`padding${a[1]}`]),m=parseFloat(n[`margin${a[0]}`]),g=parseFloat(n[`margin${a[1]}`]),$=parseFloat(n[`border${a[0]}Width`]),f=parseFloat(n[`border${a[1]}Width`]);return{delay:s,duration:c,easing:d,css:o=>`overflow: hidden;opacity: ${Math.min(o*20,1)*u};${r}: ${o*i}px;padding-${e[0]}: ${o*l}px;padding-${e[1]}: ${o*y}px;margin-${e[0]}: ${o*m}px;margin-${e[1]}: ${o*g}px;border-${e[0]}-width: ${o*$}px;border-${e[1]}-width: ${o*f}px;`}}export{_ as a,F as e,w as f,C as s};
